import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { IAddDetainLicense, IReleaseLicense } from "../interfaces";
import { IGenericApiResponse } from "../../../../interfaces/IApiResponse";
// Define the API slice
export const DetainLicenseApiSlice = createApi({
  reducerPath: "DetainLicenseApi",
  tagTypes: ["DetainLicense"],
  baseQuery: fetchBaseQuery({
    baseUrl: "http://localhost:5121/Api/v1/DetainLicense",
  }),
  endpoints: (builder) => ({
    // Endpoint for DetainLicense
    detainLicense: builder.mutation<
      IGenericApiResponse<string>,
      IAddDetainLicense
    >({
      query: (DetainLicense) => ({
        url: "/DetainLicense",
        method: "POST",
        body: DetainLicense,
      }),
      transformErrorResponse: (response: {
        status: number;
        data: IGenericApiResponse<Array<string>>;
      }) => {
        return {
          status: response.data.statusCode,
          message: response.data.errors[0],
        };
      },
    }),
    // Endpoint for ReleaseLicense
    releaseLicense: builder.mutation<
      IGenericApiResponse<string>,
      IReleaseLicense
    >({
      query: (ReleaseLicense) => ({
        url: "/ReleaseLicense",
        method: "POST",
        body: ReleaseLicense,
      }),
      transformErrorResponse: (response: {
        status: number;
        data: IGenericApiResponse<Array<string>>;
      }) => {
        return {
          status: response.data.statusCode,
          message: response.data.errors[0],
        };
      },
    }),
  }),
});

// Export hooks generated by RTK Query
export const { useDetainLicenseMutation, useReleaseLicenseMutation } =
  DetainLicenseApiSlice;
